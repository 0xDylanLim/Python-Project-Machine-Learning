import pandas as pd
from sklearn import naive_bayes
from sklearn import model_selection
from sklearn import metrics

extracted_data = pd.read_csv('extracted_nba_players.csv')

extracted_data.head(10)

#MODEL PREPARATION
y = extracted_data['target_5yrs']
X = extracted_data.drop('target_5yrs', axis = 1)

y.head(10)
X.head(10)

#perform a split operation on data by dividing training set into 75%, and test set into 25% of data.
X_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size=0.25, random_state=0)

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)

#FIT MODEL TO TRAINING DATA AND PREDICT TEST DATA
nb = naive_bayes.GaussianNB()
nb.fit(X_train, y_train)
y_pred = nb.predict(X_test)


#RESULTS AND EVALUATION
print('accuracy score:'), print(metrics.accuracy_score(y_test, y_pred))
print('precision score:'), print(metrics.precision_score(y_test, y_pred))
print('recall score:'), print(metrics.recall_score(y_test, y_pred))
print('f1 score:'), print(metrics.f1_score(y_test, y_pred))'

#CONFUSION MATRIX
cm = metrics.confusion_matrix(y_test, y_pred)
disp = metrics.ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=nb.classes_)
disp.plot()
